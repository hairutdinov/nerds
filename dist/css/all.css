/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;max-width:100%}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:Roboto;src:url(../fonts/Roboto/Roboto-Regular.woff) format("woff");font-weight:400}@font-face{font-family:Roboto;src:url(../fonts/Roboto/Roboto-Medium.woff) format("woff");font-weight:500}@font-face{font-family:Roboto;src:url(../fonts/Roboto/Roboto-Bold.woff) format("woff");font-weight:700}body{margin:0;background-color:#fff;color:#000;font:400 16px/24px Roboto}.h2{font:500 55px/55px Roboto}.h3{font:500 45px/45px Roboto}.paragraph_color_gray{color:#283136;font:400 16px/24px Roboto}.container{max-width:1200px;width:auto;padding:0 20px;margin:0 auto;outline:red solid 1px}.visually-hidden{position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;margin:-1px}.footer{min-height:220px}.button{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;box-sizing:border-box;margin:0;padding:10px;color:#fff;text-transform:uppercase;text-decoration:none;font:500 18px Roboto;border:none;border-radius:2px;cursor:pointer}.button-danger{background-color:#fb565a}.button-success{background-color:#00ca74}.button-warning{background-color:#efc84a}.c-border-bottom{padding-bottom:75px;position:relative}.c-border-bottom::after{content:'';position:absolute;max-width:1200px;margin:0 auto;bottom:0;left:-20px;right:-20px;height:2px;background-color:#eee}.header{padding-top:48px;padding-bottom:15px;background-color:#eee}.header .container{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between}.header__logo{width:160px;height:65px}.header__links-list{display:-webkit-box;display:flex;margin:0;padding:0;list-style:none}.nav__item{margin:0 23px}.nav__link{color:#000;text-decoration:none;text-transform:uppercase;font:500 16px Roboto}.right-nav__item{display:-webkit-box;display:flex;margin:0;padding:0;list-style:none}.right-nav__link{color:#000;text-decoration:none;text-transform:uppercase;font:500 16px Roboto}.slogan{background:#eee;min-height:415px}.slogan .container{display:-webkit-box;display:flex}.slogan p{margin:0;padding:0}.slogan__button{width:240px;height:50px}.slider{-webkit-box-flex:0;flex:0 1 760px;position:relative}.slider__image{width:100%}.slider__toggles-list{margin:0;padding:0;list-style:none;display:-webkit-box;display:flex;position:absolute;bottom:110px;left:100px}.slider__toggle{margin:0 9px}.left-block{padding-top:68px;padding-bottom:80px;-webkit-box-flex:1;flex:1 1 400px}.left-block .h2{margin-bottom:25px;color:#000}.left-block p{color:#283136;margin-bottom:25px}.services{margin-top:80px}.services__list{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;margin:0;padding:0;list-style:none}.services__item{-webkit-box-flex:0;flex:0 1 300px}.services__image{margin-bottom:25px}.services h3{margin:0 0 25px;padding:0;text-transform:uppercase;font:700 24px/30px Roboto}.services p{margin:0 0 35px;padding:0}.services__button{width:160px;height:50px}.about{margin-top:40px}.about .container{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between}.about_left-block{-webkit-box-flex:0;flex:0 1 680px;margin-right:20px}.about_left-block .h3{margin:40px 0 35px;padding:0}.about_left-block .paragraph_color_gray{margin-bottom:45px}.about_right-block{-webkit-box-flex:0;flex:0 1 360px;margin-left:20px}.about_right-block img{width:100%;margin-bottom:40px}.about_right-block .performance-title{margin:0 0 50px;padding:0;font-weight:700;text-transform:uppercase;text-align:center}.orders-types-title{text-transform:uppercase;font:700 16px/24px Roboto;margin:0 0 35px;padding:0}.orders-types-list{margin:0;padding:0;list-style:none}.order-type-item{margin:0 0 35px;padding:0 0 0 35px;position:relative;line-height:24px}.order-type-item::before{content:'';position:absolute;height:2px;width:25px;left:0;top:10px;background-color:#fb565a}.performance thead{padding-bottom:30px}.performance thead tr th{position:relative;padding-right:40px;text-align:left;padding-bottom:25px}.performance thead tr th::after{content:'%';position:absolute;font-size:30px;top:-8px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
